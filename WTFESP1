--// ESP MODULE WITH CLEAN DISCONNECT AND IMMEDIATE DRAWING HIDE //--

local ESP = {
    Boxes = false,
    BoxShift = CFrame.new(0,-1.5,0),
    BoxSize = Vector3.new(4,6,0),
    Color = Color3.fromRGB(255, 170, 0),
    FaceCamera = false,
    Names = false,
    Tracers = false,
    TeamColor = true,
    Thickness = 2,
    AttachShift = 1,
    TeamMates = false,
    Players = true,

    Objects = setmetatable({}, {__mode="kv"}),
    Overrides = {}
}

function ESP:IsEnabled()
    return self.Boxes or self.Names or self.Tracers
end

function ESP:UpdateESPState()
    task.delay(0.1, function()
        if not self:IsEnabled() then
            for _, v in pairs(self.Objects) do
                for _, component in pairs(v.Components) do
                    component.Visible = false
                end
            end
        end
    end)
end

-- Hook setters to trigger update state check
setmetatable(ESP, {
    __newindex = function(t, k, v)
        rawset(t, k, v)
        if k == "Boxes" or k == "Names" or k == "Tracers" then
            t:UpdateESPState()
        end
    end
})

--Declarations--
local cam = workspace.CurrentCamera
local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()

local V3new = Vector3.new
local WorldToViewportPoint = cam.WorldToViewportPoint

--Functions--
local function Draw(obj, props)
    local new = Drawing.new(obj)
    props = props or {}
    for i,v in pairs(props) do
        new[i] = v
    end
    return new
end

-- Rest of the code remains unchanged
-- [everything from ESP:GetTeam down to game:GetService("RunService").RenderStepped remains the same]

-- MODIFIED RenderStepped to include immediate disabling if needed
local lastESPEnabled = false

game:GetService("RunService").RenderStepped:Connect(function()
    cam = workspace.CurrentCamera
    local isEnabled = ESP:IsEnabled()
    if isEnabled then
        for i,v in pairs(ESP.Objects) do
            if v.Update then
                local s,e = pcall(v.Update, v)
                if not s then warn("[EU]", e, v.Object:GetFullName()) end
            end
        end
    elseif lastESPEnabled ~= isEnabled then
        for _, v in pairs(ESP.Objects) do
            for _, component in pairs(v.Components) do
                component.Visible = false
            end
        end
    end
    lastESPEnabled = isEnabled
end)

return ESP
