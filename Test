-- This is your notification module script
local NotificationModule = {}

-- Services
local TextService = game:GetService('TextService')
local CoreGui = game:GetService('CoreGui')

-- Colors
local AccentColor = Color3.fromRGB(120, 10, 10)
local MainColor = Color3.fromRGB(28, 28, 28)
local OutlineColor = Color3.fromRGB(50, 50, 50)

-- Utility function to create UI elements
local function Create(Class, Properties)
    local _Instance = Instance.new(Class)
    for Property, Value in pairs(Properties) do
        _Instance[Property] = Value
    end
    return _Instance
end

-- Utility function to get text size
local function GetTextBounds(Text, Font, Size, Resolution)
    local Bounds = TextService:GetTextSize(Text, Size, Font, Resolution or Vector2.new(1920, 1080))
    return Bounds.X, Bounds.Y
end

-- Notification UI area
local NotificationArea = Create('ScreenGui', {
    Name = "NotificationArea",
    Parent = CoreGui,
    IgnoreGuiInset = true
})

local NotificationContainer = Create('Frame', {
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 100),  -- Adjusted spawn position lower
    Size = UDim2.new(1, 0, 1, -100),
    ZIndex = 100,
    Parent = NotificationArea
})

-- Add layout to notification area
Create('UIListLayout', {
    Padding = UDim.new(0, 4),
    FillDirection = Enum.FillDirection.Vertical,
    SortOrder = Enum.SortOrder.LayoutOrder,
    Parent = NotificationContainer,
})

-- Notify function
function NotificationModule:Notify(Text, Time)
    local XSize, YSize = GetTextBounds(Text, Enum.Font.GothamSemibold, 14)
    YSize = YSize + 7

    -- Outer frame for notification
    local NotifyOuter = Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0),
        Position = UDim2.new(0.5, -XSize / 2, 0, 10),
        Size = UDim2.new(0, 0, 0, YSize),
        ClipsDescendants = true,
        ZIndex = 100,
        BackgroundTransparency = 1,
        Parent = NotificationContainer,
    })

    -- Inner frame
    local NotifyInner = Create('Frame', {
        BackgroundColor3 = MainColor,
        BorderColor3 = OutlineColor,
        BorderMode = Enum.BorderMode.Inset,
        Size = UDim2.new(1, 0, 1, 0),
        ZIndex = 101,
        Parent = NotifyOuter,
    })

    -- Inner content frame
    local InnerFrame = Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 1, 0, 1),
        Size = UDim2.new(1, -2, 1, -2),
        ZIndex = 102,
        Parent = NotifyInner,
    })

    -- Gradient effect
    Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, MainColor:lerp(Color3.new(0, 0, 0), 0.3)),
            ColorSequenceKeypoint.new(1, MainColor),
        }),
        Rotation = -90,
        Parent = InnerFrame,
    })

    -- Notification text label
    Create('TextLabel', {
        Position = UDim2.new(0, 4, 0, 0),
        Size = UDim2.new(1, -4, 1, 0),
        Text = Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Enum.Font.GothamSemibold,
        TextSize = 14,
        BackgroundTransparency = 1,
        TextColor3 = Color3.new(1, 1, 1),
        ZIndex = 103,
        Parent = InnerFrame,
    })

    -- Left color bar (Accent color)
    Create('Frame', {
        BackgroundColor3 = AccentColor,
        BorderSizePixel = 0,
        Position = UDim2.new(0, -1, 0, -1),
        Size = UDim2.new(0, 3, 1, 2),
        ZIndex = 104,
        Parent = NotifyOuter,
    })

    -- Tween the notification frame to slide in
    NotifyOuter:TweenSize(UDim2.new(0, XSize + 8 + 4, 0, YSize), 'Out', 'Quad', 0.4, true)

    -- Handle automatic dismissal after `Time` seconds
    task.spawn(function()
        wait(Time or 5)
        NotifyOuter:TweenSize(UDim2.new(0, 0, 0, YSize), 'Out', 'Quad', 0.4, true)
        wait(0.4)
        NotifyOuter:Destroy()
    end)
end

return NotificationModule
