-- NotifyLogger with Command Bar & Autocomplete
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

if _G.__NOTIFYLOGGER_LOADED then return _G.__NOTIFYLOGGER_INSTANCE end
_G.__NOTIFYLOGGER_LOADED = true

-- Destroy previous UIs
for _, name in ipairs({"NotificationArea", "LoggerGUI"}) do
    local gui = CoreGui:FindFirstChild(name)
    if gui then gui:Destroy() end
end

local NotifyLogger = {}
local Commands = {}

-- Helper
local function Create(class, props)
    local inst = Instance.new(class)
    for k, v in pairs(props) do inst[k] = v end
    return inst
end

-- === GUI Setup ===
local LoggerGUI = Create("ScreenGui", {
    Name = "LoggerGUI",
    Parent = CoreGui,
    ResetOnSpawn = false
})

local MainFrame = Create("Frame", {
    Size = UDim2.new(0, 320, 0, 250),
    Position = UDim2.new(1, -340, 1, -270),
    BackgroundColor3 = Color3.fromRGB(25, 25, 25),
    BorderSizePixel = 0,
    Name = "LoggerFrame",
    Parent = LoggerGUI
})

local Header = Create("TextButton", {
    Size = UDim2.new(1, 0, 0, 24),
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    Text = "▼ Logger (Click to Minimize)",
    Font = Enum.Font.SourceSansBold,
    TextSize = 16,
    TextColor3 = Color3.new(1, 1, 1),
    AutoButtonColor = false,
    Parent = MainFrame
})

local ScrollingFrame = Create("ScrollingFrame", {
    Position = UDim2.new(0, 0, 0, 24),
    Size = UDim2.new(1, -6, 1, -80),
    CanvasSize = UDim2.new(0, 0, 10, 0),
    ScrollBarThickness = 6,
    BackgroundTransparency = 1,
    Name = "LogScroll",
    Parent = MainFrame
})

local UIListLayout = Create("UIListLayout", {
    SortOrder = Enum.SortOrder.LayoutOrder,
    Parent = ScrollingFrame
})

-- Command Bar
local CommandBox = Create("TextBox", {
    Size = UDim2.new(1, -12, 0, 24),
    Position = UDim2.new(0, 6, 1, -28),
    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.SourceSans,
    TextSize = 16,
    PlaceholderText = "Enter command...",
    ClearTextOnFocus = false,
    TextXAlignment = Enum.TextXAlignment.Left,
    Parent = MainFrame
})

-- Suggestion List
local SuggestionFrame = Create("Frame", {
    Size = UDim2.new(1, -12, 0, 0),
    Position = UDim2.new(0, 6, 1, -52),
    BackgroundTransparency = 1,
    ClipsDescendants = true,
    Parent = MainFrame
})

local SuggestionList = Create("UIListLayout", {
    Parent = SuggestionFrame,
    SortOrder = Enum.SortOrder.LayoutOrder
})

-- === Logger ===
local logEntries = {}
function NotifyLogger.Log(text)
    local label = Create("TextLabel", {
        Size = UDim2.new(1, -10, 0, 20),
        BackgroundTransparency = 1,
        Text = text,
        TextColor3 = Color3.new(1, 1, 1),
        Font = Enum.Font.SourceSans,
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = ScrollingFrame
    })
    table.insert(logEntries, label)
    task.wait()
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
end

function NotifyLogger.Clear()
    for _, l in pairs(logEntries) do l:Destroy() end
    logEntries = {}
end

function NotifyLogger.Show(state)
    LoggerGUI.Enabled = state
end

-- === Command System ===
function NotifyLogger.AddCommand(name, func)
    Commands[name:lower()] = func
end

CommandBox.FocusLost:Connect(function(enter)
    if enter then
        local text = CommandBox.Text:lower()
        if Commands[text] then
            Commands[text]()
            NotifyLogger.Log("[Command] Executed: " .. text)
        else
            NotifyLogger.Log("[Error] Unknown command: " .. text)
        end
        CommandBox.Text = ""
        for _, c in ipairs(SuggestionFrame:GetChildren()) do if c:IsA("TextButton") then c:Destroy() end end
    end
end)

CommandBox:GetPropertyChangedSignal("Text"):Connect(function()
    for _, c in ipairs(SuggestionFrame:GetChildren()) do if c:IsA("TextButton") then c:Destroy() end end
    local text = CommandBox.Text:lower()
    local count = 0
    for name in pairs(Commands) do
        if name:sub(1, #text) == text and text ~= "" then
            local button = Create("TextButton", {
                Size = UDim2.new(1, 0, 0, 20),
                BackgroundColor3 = Color3.fromRGB(35, 35, 35),
                TextColor3 = Color3.new(1, 1, 1),
                Font = Enum.Font.SourceSans,
                TextSize = 16,
                TextXAlignment = Enum.TextXAlignment.Left,
                Text = name,
                Parent = SuggestionFrame
            })
            button.MouseButton1Click:Connect(function()
                CommandBox.Text = name
                CommandBox:CaptureFocus()
            end)
            count += 1
        end
    end
    SuggestionFrame.Size = UDim2.new(1, -12, 0, count * 22)
end)

-- === Header Minimizer ===
local isMinimized = false
Header.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    Header.Text = isMinimized and "▶ Logger (Click to Expand)" or "▼ Logger (Click to Minimize)"
    ScrollingFrame.Visible = not isMinimized
    CommandBox.Visible = not isMinimized
end)

-- === Return ===
_G.__NOTIFYLOGGER_INSTANCE = NotifyLogger
return NotifyLogger
