-- NotifyLogger Module (with Command Bar + Autocomplete)
local CoreGui = game:GetService("CoreGui")
local TextService = game:GetService("TextService")
local UserInputService = game:GetService("UserInputService")

if _G.__NOTIFYLOGGER_LOADED then return _G.__NOTIFYLOGGER_INSTANCE end
_G.__NOTIFYLOGGER_LOADED = true

-- Clean previous UIs
if CoreGui:FindFirstChild("NotificationArea") then CoreGui.NotificationArea:Destroy() end
if CoreGui:FindFirstChild("LoggerGUI") then CoreGui.LoggerGUI:Destroy() end

local NotifyLogger = {}
local Commands = {}

-- === Colors ===
local AccentColor = Color3.fromRGB(75, 10, 120)
local MainColor = Color3.fromRGB(25, 25, 25)
local OutlineColor = Color3.fromRGB(50, 50, 50)

-- === Utilities ===
local function Create(Class, Props)
	local Inst = Instance.new(Class)
	for prop, val in pairs(Props) do Inst[prop] = val end
	return Inst
end

local function StripTags(str)
	return string.gsub(str, "<[^>]->", "")
end

local function GetTextSize(Text, Font, Size)
	local Bounds = TextService:GetTextSize(Text, Size, Font, Vector2.new(1920, 1080))
	return Bounds.X or 200, Bounds.Y or 50
end

-- === Notification Area ===
local NotificationArea = Create("ScreenGui", {
	Name = "NotificationArea",
	Parent = CoreGui,
	IgnoreGuiInset = true
})

local NotificationContainer = Create("Frame", {
	BackgroundTransparency = 1,
	Position = UDim2.new(0, 0, 0, 370),
	Size = UDim2.new(1, 0, 1, -40),
	ZIndex = 100,
	Parent = NotificationArea
})

Create("UIListLayout", {
	Padding = UDim.new(0, 4),
	FillDirection = Enum.FillDirection.Vertical,
	SortOrder = Enum.SortOrder.LayoutOrder,
	Parent = NotificationContainer,
})

-- === Logger UI ===
local LoggerGUI = Create("ScreenGui", {
	Name = "LoggerGUI",
	Parent = CoreGui,
	ResetOnSpawn = false,
	Enabled = false
})

local LoggerFrame = Create("Frame", {
	Size = UDim2.new(0, 300, 0, 200),
	Position = UDim2.new(1, -310, 1, -210),
	BackgroundColor3 = Color3.fromRGB(30, 30, 30),
	BorderSizePixel = 0,
	BackgroundTransparency = 0.2,
	Name = "LoggerFrame",
	Parent = LoggerGUI
})

local Header = Create("TextButton", {
	Size = UDim2.new(1, 0, 0, 24),
	BackgroundColor3 = Color3.fromRGB(40, 40, 40),
	Text = "▼ Logger (Click to Minimize)",
	Font = Enum.Font.SourceSansBold,
	TextSize = 16,
	TextColor3 = Color3.new(1, 1, 1),
	BorderSizePixel = 0,
	AutoButtonColor = false,
	Parent = LoggerFrame
})

local ScrollingFrame = Create("ScrollingFrame", {
	Size = UDim2.new(1, -6, 1, -60),
	Position = UDim2.new(0, 0, 0, 24),
	CanvasSize = UDim2.new(0, 0, 10, 0),
	ScrollBarThickness = 6,
	BackgroundTransparency = 1,
	Name = "LogScroll",
	Parent = LoggerFrame
})

local UIListLayout = Create("UIListLayout", {
	SortOrder = Enum.SortOrder.LayoutOrder,
	Parent = ScrollingFrame
})

local CommandInput = Create("TextBox", {
	Size = UDim2.new(1, -12, 0, 22),
	Position = UDim2.new(0, 6, 1, -30),
	BackgroundColor3 = MainColor,
	BorderColor3 = OutlineColor,
	Text = "",
	PlaceholderText = "Type command...",
	Font = Enum.Font.SourceSans,
	TextSize = 16,
	TextColor3 = Color3.new(1, 1, 1),
	ClearTextOnFocus = false,
	Parent = LoggerFrame
})

local SuggestionFrame = Create("Frame", {
	Size = UDim2.new(1, -12, 0, 0),
	Position = UDim2.new(0, 6, 1, -52),
	BackgroundTransparency = 0.3,
	BackgroundColor3 = Color3.fromRGB(20, 20, 20),
	Visible = false,
	ClipsDescendants = true,
	ZIndex = 3,
	Parent = LoggerFrame
})

local SuggestionList = Create("UIListLayout", {
	Padding = UDim.new(0, 2),
	SortOrder = Enum.SortOrder.LayoutOrder,
	Parent = SuggestionFrame
})

-- === Command System ===
function NotifyLogger.AddCommand(name, callback)
	Commands[name:lower()] = callback
end

CommandInput:GetPropertyChangedSignal("Text"):Connect(function()
	local input = CommandInput.Text:lower()
	for _, child in ipairs(SuggestionFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	if input == "" then
		SuggestionFrame.Visible = false
		SuggestionFrame.Size = UDim2.new(1, -12, 0, 0)
		return
	end

	local count = 0
	for cmd in pairs(Commands) do
		if cmd:sub(1, #input) == input then
			count += 1
			local btn = Create("TextButton", {
				Text = cmd,
				Size = UDim2.new(1, 0, 0, 20),
				BackgroundTransparency = 1,
				TextColor3 = Color3.fromRGB(200, 200, 200),
				Font = Enum.Font.SourceSans,
				TextSize = 16,
				AutoButtonColor = false,
				ZIndex = 4,
				Parent = SuggestionFrame
			})
			btn.MouseButton1Click:Connect(function()
				CommandInput.Text = cmd
				CommandInput:ReleaseFocus()
				SuggestionFrame.Visible = false
			end)
		end
	end

	SuggestionFrame.Visible = count > 0
	SuggestionFrame.Size = UDim2.new(1, -12, 0, math.min(100, count * 22))
end)

CommandInput.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local text = CommandInput.Text
		local split = string.split(text, " ")
		local cmd = split[1]:lower()
		table.remove(split, 1)
		if Commands[cmd] then
			Commands[cmd](split)
		else
			NotifyLogger.Notify("Unknown command: " .. cmd, Color3.fromRGB(255, 50, 50), 3)
		end
		CommandInput.Text = ""
		SuggestionFrame.Visible = false
	end
end)

-- === Logger Functions ===
local logEntries, isMinimized = {}, false
Header.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	Header.Text = isMinimized and "▶ Logger (Click to Expand)" or "▼ Logger (Click to Minimize)"
	ScrollingFrame.Visible = not isMinimized
	CommandInput.Visible = not isMinimized
end)

function NotifyLogger.Log(text)
	local raw = tostring(text)
	local label = Create("TextButton", {
		Size = UDim2.new(1, -10, 0, 20),
		BackgroundTransparency = 1,
		Text = raw,
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.SourceSans,
		TextSize = 16,
		TextXAlignment = Enum.TextXAlignment.Left,
		RichText = true,
		AutoButtonColor = false,
		Parent = ScrollingFrame
	})
	label.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard(StripTags(raw))
			NotifyLogger.Notify("Copied to clipboard!", Color3.fromRGB(80, 200, 80), 2)
		end
	end)
	table.insert(logEntries, label)
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
	ScrollingFrame.CanvasPosition = Vector2.new(0, ScrollingFrame.CanvasSize.Y.Offset)
end

function NotifyLogger.Clear()
	for _, lbl in ipairs(logEntries) do lbl:Destroy() end
	logEntries = {}
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
end

function NotifyLogger.Show(state)
	LoggerGUI.Enabled = state
end

-- === Notify ===
local ActiveNotifications, NotificationTimers = {}, {}
function NotifyLogger.Notify(Text, Color, Time)
	local CleanText = StripTags(Text or "")
	if ActiveNotifications[Text] then
		local NotifyFrame = ActiveNotifications[Text]
		local Bar = NotifyFrame:FindFirstChild("AccentBar")
		local Label = NotifyFrame:FindFirstChildOfClass("TextLabel")

		if not Bar:FindFirstChild("Flash") then
			local Flash = Instance.new("BoolValue")
			Flash.Name = "Flash"
			Flash.Parent = Bar

			task.spawn(function()
				local Orig = Bar.BackgroundColor3
				for _ = 1, 3 do
					Bar.BackgroundColor3 = Color3.new(1, 1, 1)
					Label.TextColor3 = Color3.new(1, 1, 1)
					wait(0.2)
					Bar.BackgroundColor3 = Orig
					wait(0.2)
				end
				Flash:Destroy()
			end)
		end

		if NotificationTimers[Text] then task.cancel(NotificationTimers[Text]) end
		NotificationTimers[Text] = task.spawn(function()
			wait(Time or 5)
			NotifyFrame:TweenSize(UDim2.new(0, 0, 0, NotifyFrame.Size.Y.Offset), "Out", "Quad", 0.4, true)
			wait(0.4)
			NotifyFrame:Destroy()
			ActiveNotifications[Text] = nil
		end)
		return
	end

	local XSize, YSize = GetTextSize(CleanText, Enum.Font.GothamBold, 17)
	YSize = YSize + 10

	local NotifyFrame = Create("Frame", {
		BackgroundColor3 = MainColor,
		BorderColor3 = OutlineColor,
		BorderMode = Enum.BorderMode.Inset,
		Position = UDim2.new(0.5, -XSize / 2, 0, 10),
		Size = UDim2.new(0, 0, 0, YSize),
		ClipsDescendants = true,
		ZIndex = 101,
		Parent = NotificationContainer,
	})

	Create("TextLabel", {
		Position = UDim2.new(0, 6, 0, 0),
		Size = UDim2.new(1, -6, 1, 0),
		Text = Text,
		Font = Enum.Font.GothamBold,
		TextSize = 17,
		BackgroundTransparency = 1,
		TextColor3 = Color3.new(1, 1, 1),
		TextXAlignment = Enum.TextXAlignment.Left,
		ZIndex = 102,
		RichText = true,
		Parent = NotifyFrame,
	})

	Create("Frame", {
		Name = "AccentBar",
		BackgroundColor3 = Color or AccentColor,
		Size = UDim2.new(0, 3, 1, 0),
		Position = UDim2.new(0, 0, 0, 0),
		ZIndex = 103,
		Parent = NotifyFrame,
	})

	NotifyFrame:TweenSize(UDim2.new(0, XSize + 14, 0, YSize), "Out", "Quad", 0.4, true)
	ActiveNotifications[Text] = NotifyFrame

	NotificationTimers[Text] = task.spawn(function()
		wait(Time or 5)
		NotifyFrame:TweenSize(UDim2.new(0, 0, 0, YSize), "Out", "Quad", 0.4, true)
		wait(0.4)
		NotifyFrame:Destroy()
		ActiveNotifications[Text] = nil
	end)

	NotifyLogger.Log(Text)
end

_G.__NOTIFYLOGGER_INSTANCE = NotifyLogger
return NotifyLogger
