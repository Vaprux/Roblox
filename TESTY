if game:GetService("CoreGui"):FindFirstChild("NotificationArea") then  
    game:GetService("CoreGui"):FindFirstChild("NotificationArea"):Destroy()
end

local NotificationModule = {}
local TextService = game:GetService('TextService')
local CoreGui = game:GetService('CoreGui')

local AccentColor = Color3.fromRGB(75, 10, 120)  -- Keep this for accent color
local MainColor = Color3.fromRGB(28, 28, 28)  -- Main dark color
local OutlineColor = Color3.fromRGB(50, 50, 50)  -- Outline color

local ActiveNotifications = {} -- Stores active notifications

local function Create(Class, Properties)
    local _Instance = Instance.new(Class)
    for Property, Value in pairs(Properties) do
        _Instance[Property] = Value
    end
    return _Instance
end

local function GetTextBounds(Text, Font, Size, Resolution)
    local Bounds = TextService:GetTextSize(Text, Size, Font, Resolution or Vector2.new(1920, 1080))
    return Bounds.X, Bounds.Y
end

local NotificationArea = Create('ScreenGui', {
    Name = "NotificationArea",
    Parent = CoreGui,
    IgnoreGuiInset = true
})

local NotificationContainer = Create('Frame', {
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 370),
    Size = UDim2.new(1, 0, 1, -40),
    ZIndex = 100,
    Parent = NotificationArea
})

Create('UIListLayout', {
    Padding = UDim.new(0, 4),
    FillDirection = Enum.FillDirection.Vertical,
    SortOrder = Enum.SortOrder.LayoutOrder,
    Parent = NotificationContainer,
})

function NotificationModule:Notify(Text, Color, Time)
    -- If the notification already exists, flash it
    if ActiveNotifications[Text] then
        local NotifyOuter = ActiveNotifications[Text]
        local AccentBar = NotifyOuter:FindFirstChild("AccentBar") -- Find the accent frame
        local TextLabel = NotifyOuter.Frame.Frame:FindFirstChild("TextLabel") -- Find the text label
        
        -- Flash effect (Purple)
        task.spawn(function()
            local originalColor = AccentBar.BackgroundColor3
            for i = 1, 3 do
                AccentBar.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Flash purple
                TextLabel.TextColor3 = Color3.fromRGB(128, 0, 128) -- Flash purple
                task.wait(0.2)
                AccentBar.BackgroundColor3 = originalColor
                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                task.wait(0.2)
            end
        end)
        return -- Prevent duplicate notifications from being created
    end

    -- Create new notification
    local TextSize = 17
    local XSize, YSize = GetTextBounds(Text, Enum.Font.GothamBold, TextSize)  -- Changed font to match GTA 5 style
    YSize = YSize + 10  -- Added some space for a more stylish appearance

    local NotifyOuter = Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0),
        Position = UDim2.new(0.5, -XSize / 2, 0, 10),
        Size = UDim2.new(0, 0, 0, YSize),
        ClipsDescendants = true,
        ZIndex = 100,
        BackgroundTransparency = 1,
        Parent = NotificationContainer,
    })

    local NotifyInner = Create('Frame', {
        BackgroundColor3 = MainColor,
        BorderColor3 = OutlineColor,
        BorderMode = Enum.BorderMode.Inset,
        Size = UDim2.new(1, 0, 1, 0),
        ZIndex = 101,
        Parent = NotifyOuter,
    })

    local InnerFrame = Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 1, 0, 1),
        Size = UDim2.new(1, -2, 1, -2),
        ZIndex = 102,
        Parent = NotifyInner,
    })

    Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, MainColor:lerp(Color3.new(0, 0, 0), 0.3)),
            ColorSequenceKeypoint.new(1, MainColor),
        }),
        Rotation = -90,
        Parent = InnerFrame,
    })

    Create('TextLabel', {
        Position = UDim2.new(0, 4, 0, 0),
        Size = UDim2.new(1, -4, 1, 0),
        Text = Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Enum.Font.GothamBold,  -- Changed font to match GTA style
        TextSize = TextSize,
        BackgroundTransparency = 1,
        TextColor3 = Color3.new(1, 1, 1),
        ZIndex = 103,
        Parent = InnerFrame,
    })

    -- Notification border accent line
    Create('Frame', {
        Name = "AccentBar",  -- Name the frame so it can be identified later
        BackgroundColor3 = Color or AccentColor,  -- Use the provided color
        BorderSizePixel = 0,
        Position = UDim2.new(0, -1, 0, -1),
        Size = UDim2.new(0, 3, 1, 2),
        ZIndex = 104,
        Parent = NotifyOuter,
    })

    -- Smoothly animate the notification appearance
    NotifyOuter:TweenSize(UDim2.new(0, XSize + 8 + 4, 0, YSize), 'Out', 'Quad', 0.4, true)

    -- Store the active notification
    ActiveNotifications[Text] = NotifyOuter

    -- Destroy notification after time
    task.spawn(function()
        wait(Time or 5)
        NotifyOuter:TweenSize(UDim2.new(0, 0, 0, YSize), 'Out', 'Quad', 0.4, true)
        wait(0.4)
        NotifyOuter:Destroy()
        ActiveNotifications[Text] = nil
    end)
end

NotificationModule:Notify("FUCKKKK!", Color3.fromRGB(255, 0, 0), 5) -- Will flash instead of duplicating

return NotificationModule
