if game:GetService("CoreGui"):FindFirstChild("NotificationArea") then   
    game:GetService("CoreGui"):FindFirstChild("NotificationArea"):Destroy()
end

local NotificationModule = {}
local TextService = game:GetService("TextService")
local CoreGui = game:GetService("CoreGui")

local AccentColor = Color3.fromRGB(75, 10, 120)
local MainColor = Color3.fromRGB(28, 28, 28)
local OutlineColor = Color3.fromRGB(50, 50, 50)

local ActiveNotifications = {}

local function Create(Class, Properties)
    local InstanceObj = Instance.new(Class)
    for Property, Value in pairs(Properties) do
        InstanceObj[Property] = Value
    end
    return InstanceObj
end

local function GetTextSize(Text, Font, Size)
    local Bounds = TextService:GetTextSize(Text, Size, Font, Vector2.new(1920, 1080))
    return Bounds.X or 200, Bounds.Y or 50 -- Default to prevent nil errors
end

local NotificationArea = Create("ScreenGui", {
    Name = "NotificationArea",
    Parent = CoreGui,
    IgnoreGuiInset = true
})

local NotificationContainer = Create("Frame", {
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 370),
    Size = UDim2.new(1, 0, 1, -40),
    ZIndex = 100,
    Parent = NotificationArea
})

Create("UIListLayout", {
    Padding = UDim.new(0, 4),
    FillDirection = Enum.FillDirection.Vertical,
    SortOrder = Enum.SortOrder.LayoutOrder,
    Parent = NotificationContainer,
})

function NotificationModule:Notify(Text, Color, Time)
    if ActiveNotifications[Text] then return end
    
    local TextSize = 17
    local XSize, YSize = GetTextSize(Text or "", Enum.Font.GothamBold, TextSize)
    YSize = YSize + 10

    local NotifyFrame = Create("Frame", {
        BackgroundColor3 = MainColor,
        BorderColor3 = OutlineColor,
        BorderMode = Enum.BorderMode.Inset,
        Position = UDim2.new(0.5, -XSize / 2, 0, 10),
        Size = UDim2.new(0, 0, 0, YSize),
        ClipsDescendants = true,
        ZIndex = 101,
        Parent = NotificationContainer,
    })
    
    Create("TextLabel", {
        Position = UDim2.new(0, 6, 0, 0),
        Size = UDim2.new(1, -6, 1, 0),
        Text = Text,
        Font = Enum.Font.GothamBold,
        TextSize = TextSize,
        BackgroundTransparency = 1,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 102,
        Parent = NotifyFrame,
    })

    Create("Frame", {
        BackgroundColor3 = Color or AccentColor,
        Size = UDim2.new(0, 3, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        ZIndex = 103,
        Parent = NotifyFrame,
    })

    NotifyFrame:TweenSize(UDim2.new(0, XSize + 14, 0, YSize), "Out", "Quad", 0.4, true)
    ActiveNotifications[Text] = NotifyFrame

    task.spawn(function()
        wait(Time or 5)
        NotifyFrame:TweenSize(UDim2.new(0, 0, 0, YSize), "Out", "Quad", 0.4, true)
        wait(0.4)
        NotifyFrame:Destroy()
        ActiveNotifications[Text] = nil
    end)
end

return NotificationModule
